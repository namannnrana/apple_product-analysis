# -*- coding: utf-8 -*-
"""apple_phone

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11OhziQQJHfAkdVywKd64YOo8ZjkCtYL-
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

apple = pd.read_csv('apple.csv')

apple.columns

apple.sort_values(['Star Rating'], inplace = True, ascending=False)

#1. Top 5 star rating apple phones
apple.head(5)['Product Name']

#2. Lowest 5 star rating apple phones
apple.tail(5)['Product Name']

apple.sort_values(['Number Of Ratings'], inplace = True, ascending=False)

#3. Ratings provided to top 5 star rating apple phones
apple[['Number Of Ratings','Product Name']].head(5)

#4. Ratings provided to lowest 5 star rating apple phones
apple[['Number Of Ratings','Product Name']].tail(5)

#5. Apple phone have highest number of reviews
apple[apple['Number Of Reviews'] == apple['Number Of Reviews'].max()]['Product Name']

#6. Apple phone have lowest number of reviews
apple[apple['Number Of Reviews'] == apple['Number Of Reviews'].min()]['Product Name']

#7. Relationship between sale price and number of ratings
corr_matrix = apple[['Number Of Ratings', 'Sale Price']].corr()

# Plot the heatmap
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')

plt.show()

plt.plot(corr_matrix)

corr_matrix.plot(kind = 'bar')

#8. Relationship between sale price and number of reviews
corr_matrix = apple[['Number Of Reviews', 'Sale Price']].corr()

# Plot the heatmap
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')

plt.show()

plt.plot(corr_matrix)

corr_matrix.plot(kind = 'bar')

#9. Relationship between discount percentage and number of ratings
corr_matrix = apple[['Number Of Ratings', 'Discount Percentage']].corr()

# Plot the heatmap
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')

plt.show()

plt.plot(corr_matrix)

corr_matrix.plot(kind = 'bar')

#10. Relationship between discount percentage and number of reviews
corr_matrix = apple[['Number Of Reviews', 'Discount Percentage']].corr()

# Plot the heatmap
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')

plt.show()

plt.plot(corr_matrix)

corr_matrix.plot(kind = 'bar')

#11. Most expensive
apple[apple['Mrp'] == apple['Mrp'].max()]['Product Name']

#12. least expensive apple phone
apple[apple['Mrp'] == apple['Mrp'].min()]['Product Name']